name: "dotnet-project-build-n-test"
description: "Builds and tests a .NET project"
inputs:
  framework:
    description: ".NET target framework"
    required: true
    default: net5.0
  projectDirectory:
    description: "Project directory"
    required: true
  testsDirectory:
    description: "Tests directory"
    required: true
# outputs:
#   random-number:
#     description: "Random number"
#     value: ${{ steps.random-number-generator.outputs.random-id }}
runs:
  using: "composite"
  steps:
    - run: dotnet restore
      name: dotnet restore
      working-directory: ${{ inputs.projectDirectory }}
      shell: bash
    - run: dotnet build --no-restore --framework ${{ inputs.framework }}
      name: dotnet build
      working-directory: ${{ inputs.projectDirectory }}
      shell: bash
    - run: dotnet add package LiquidTestReports.Markdown --version 1.0.9
      name: dotnet add package LiquidTestReports.Markdown
      working-directory: ${{ inputs.testsDirectory }}
      shell: bash
    - name: set test title
      shell: bash
      run: | 
        if ${{ github.event_name == 'pull_request' }}
        then
          echo "::set-env name=title::Test Run for PR #${{ steps.PRNUMBER.outputs.pr }} (${{ inputs.framework }}, ${{ github.run_number }})"
          echo "::set-env name=file_name::TestReport.${{ inputs.framework }}.${{ steps.PRNUMBER.outputs.pr }}.${{ github.run_number }}.md"
        else
          echo "::set-env name=title::Test Run ${{ inputs.framework }} ${{ github.run_number }}"
          echo "::set-env name=file_name::TestReport.${{ inputs.framework }}.${{ github.run_number }}.md"
        fi
    - run: dotnet test --framework ${{ inputs.framework }} --logger:"liquid.md;LogFileName=${{ github.workspace }}/${{ env.file_name }};Title=${{ env.title }};"
      name: dotnet test
      working-directory: ${{ inputs.testsDirectory }}
      shell: bash